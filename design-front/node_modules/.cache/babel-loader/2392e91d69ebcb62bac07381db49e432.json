{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport $ from 'jquery';\nexport default {\n  name: 'ServiceUpload',\n  data() {\n    return {\n      uploadImages: [],\n      totalImgSize: 0 // 文件大小，单位为字节\n    };\n  },\n\n  computed: {\n    fileName: {\n      // 计算属性，自动拼凑出文件名称\n      get: function () {\n        let filename = '';\n        this.uploadImages.forEach(item => {\n          filename += item.name + ';';\n        });\n        return filename;\n      }\n    }\n  },\n  methods: {\n    // todo 不能随便使用匿名函数的形式，因为可能会无法访问vue变量，因此\n    openWindow: function () {\n      document.getElementById('importFile').click();\n    },\n    check_suffix: function (filename) {\n      // 检查文件类型\n      const fileType = filename.substring(filename.lastIndexOf('.') + 1);\n      if (['png', 'jpg', 'jpeg', 'bmp', 'gif', 'webp', 'psd', 'svg', 'tiff'].indexOf(fileType.toLowerCase()) !== -1) {\n        return 1;\n      } else if (['zip'].indexOf(fileType.toLowerCase()) !== -1) {\n        return 2;\n      } else {\n        return 0;\n      }\n    },\n    getBase64: function (file) {\n      const fileReader = new FileReader();\n      const _this = this;\n      const imgs = {};\n      imgs.name = file.name;\n      imgs.size = file.size;\n      fileReader.readAsDataURL(file);\n      fileReader.onload = function (event) {\n        imgs.base64 = event.target.result;\n        _this.uploadImages.push(imgs);\n        console.log(_this.uploadImages);\n      };\n    },\n    uploadFile: function (event) {\n      const _this = this;\n      _this.uploadImages = _this.uploadImages.filter(function (item) {\n        return item !== 'failure';\n      });\n    }\n  },\n  mounted() {\n    const _this = this;\n\n    // 当上传文件时触发的内容\n    const fn = function (event) {\n      const files = event.target.files;\n      let i = 0;\n      // 对所有的文件开始读取\n      for (; i < files.length; i++) {\n        const file = files[i];\n        _this.totalImgSize += file.size;\n\n        // 读取文件\n        if (_this.check_suffix(file.name) !== 0) {\n          // todo 文件需要先加载，加载完成之后才能触发事件，这是一个异步函数\n          _this.getBase64(file);\n        } else {\n          _this.$message.warning('仅支持图片或者.zip结尾的压缩文件夹');\n          break;\n        }\n      }\n      // 上传多个文件\n      if (i === files.length && files.length === 1 && _this.check_suffix(files[0]) === 1) {\n        _this.$message.success('选中一张图片' + _this.fileName);\n      } else if (i === files.length) {\n        _this.$message.success('选中多个文件，进入批处理状态' + _this.fileName);\n      }\n    };\n    $('#importFile').change(fn);\n  }\n};","map":{"version":3,"mappings":";AAsBA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;IACA;EACA;;EACAC;IACAC;MAAA;MACAC;QACA;QACA;UACAC;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACAC;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAC;MACAA;MACAC;MACAA;QACAD;QACAE;QACAC;MACA;IACA;IACAC;MACA;MACAF;QACA;MACA;IACA;EACA;EACAG;IACA;;IAEA;IACA;MACA;MACA;MACA;MACA;QACA;QACAH;;QAEA;QACA;UACA;UACAA;QACA;UACAA;UACA;QACA;MACA;MACA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACAI;EACA;AACA","names":["name","data","uploadImages","totalImgSize","computed","fileName","get","filename","methods","openWindow","document","check_suffix","getBase64","imgs","fileReader","_this","console","uploadFile","mounted","$"],"sourceRoot":"src/components","sources":["ServiceUpload.vue"],"sourcesContent":["<template>\r\n  <div class=\"service-upload\">\r\n<!--输入框1-->\r\n    <div class=\"inb upload-input\">\r\n      <div class=\"inb input-box\">\r\n        <input id=\"filePath\" :value=\"fileName\" placeholder=\"请输入文件路径\"/>\r\n      </div>\r\n      <div class=\"inb input-btn\" @click=\"openWindow\">\r\n        <span style=\"display: inline-block;\">本地上传</span>\r\n      </div>\r\n    </div>\r\n<!--上传按钮2-->\r\n    <div class=\"inb upload-btn\">\r\n      <div class=\"detect-btn\" @click=\"uploadFile\">\r\n        <span>检测</span>\r\n      </div>\r\n    </div>\r\n    <input type=\"file\" id=\"importFile\" v-show=\"false\" multiple>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n  name: 'ServiceUpload',\r\n  data () {\r\n    return {\r\n      uploadImages: [],\r\n      totalImgSize: 0 // 文件大小，单位为字节\r\n    }\r\n  },\r\n  computed: {\r\n    fileName: { // 计算属性，自动拼凑出文件名称\r\n      get: function () {\r\n        let filename = ''\r\n        this.uploadImages.forEach((item) => {\r\n          filename += item.name + ';'\r\n        })\r\n        return filename\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // todo 不能随便使用匿名函数的形式，因为可能会无法访问vue变量，因此\r\n    openWindow: function () {\r\n      document.getElementById('importFile').click()\r\n    },\r\n    check_suffix: function (filename) { // 检查文件类型\r\n      const fileType = filename.substring(filename.lastIndexOf('.') + 1)\r\n      if (['png', 'jpg', 'jpeg', 'bmp', 'gif', 'webp', 'psd', 'svg', 'tiff'].indexOf(fileType.toLowerCase()) !== -1) {\r\n        return 1\r\n      } else if (['zip'].indexOf(fileType.toLowerCase()) !== -1) {\r\n        return 2\r\n      } else {\r\n        return 0\r\n      }\r\n    },\r\n    getBase64: function (file) {\r\n      const fileReader = new FileReader()\r\n      const _this = this\r\n      const imgs = {}\r\n      imgs.name = file.name\r\n      imgs.size = file.size\r\n      fileReader.readAsDataURL(file)\r\n      fileReader.onload = function (event) {\r\n        imgs.base64 = event.target.result\r\n        _this.uploadImages.push(imgs)\r\n        console.log(_this.uploadImages)\r\n      }\r\n    },\r\n    uploadFile: function (event) {\r\n      const _this = this\r\n      _this.uploadImages = _this.uploadImages.filter(function (item) {\r\n        return item !== 'failure'\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    const _this = this\r\n\r\n    // 当上传文件时触发的内容\r\n    const fn = function (event) {\r\n      const files = event.target.files\r\n      let i = 0\r\n      // 对所有的文件开始读取\r\n      for (; i < files.length; i++) {\r\n        const file = files[i]\r\n        _this.totalImgSize += file.size\r\n\r\n        // 读取文件\r\n        if (_this.check_suffix(file.name) !== 0) {\r\n          // todo 文件需要先加载，加载完成之后才能触发事件，这是一个异步函数\r\n          _this.getBase64(file)\r\n        } else {\r\n          _this.$message.warning('仅支持图片或者.zip结尾的压缩文件夹')\r\n          break\r\n        }\r\n      }\r\n      // 上传多个文件\r\n      if (i === files.length && files.length === 1 && _this.check_suffix(files[0]) === 1) {\r\n        _this.$message.success('选中一张图片' + _this.fileName)\r\n      } else if (i === files.length) {\r\n        _this.$message.success('选中多个文件，进入批处理状态' + _this.fileName)\r\n      }\r\n    }\r\n    $('#importFile').change(fn)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.service-upload{\r\n  height: 40px;\r\n  padding: 3px 0;\r\n  text-align:left;\r\n  font-size: 16px;\r\n}\r\n.inb{\r\n  display: inline-block;\r\n}\r\n.upload-input{\r\n  width: 78%;\r\n  margin-right:2%;\r\n  padding-left: 20px;\r\n}\r\n.input-btn{\r\n  background-color: #007FF5;\r\n  height: 35px;\r\n  width: 20%;\r\n  float: right;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  border-bottom-right-radius: 17px;\r\n  border-top-right-radius: 17px;\r\n}\r\n/*输入框的外围*/\r\n.input-box{\r\n  border-bottom-left-radius:18px;\r\n  border-top-left-radius:18px;\r\n  border: 2px solid #A1AFD2;\r\n  height: 35px;\r\n  width:80%;\r\n  color: #43485C;\r\n  background-color: #fff;\r\n}\r\n/*实际的输入框*/\r\n.input-box input{\r\n  width:90%;\r\n  margin-top:4px;\r\n  margin-left: 20px;\r\n  border-style: none;\r\n}\r\n\r\n/*文字框，控制文字的位置*/\r\n.input-btn span{\r\n  display: block;\r\n  margin-top: 6px;\r\n  margin-left: 20%;\r\n}\r\n.input-btn span:hover{\r\n  cursor: pointer;\r\n}\r\n.upload-btn{\r\n   width: 18%;\r\n  margin-top: -20px;\r\n}\r\n.detect-btn{\r\n  width: 130px;\r\n  height: 35px;\r\n  text-align: center;\r\n  background-color: #007FF5;\r\n  color: #fff;\r\n  border-radius: 17px;\r\n  font-weight: bold;\r\n  margin-left: 40px;\r\n}\r\n.detect-btn:hover{\r\n  cursor: pointer;\r\n}\r\n.detect-btn span{\r\n  display: inline-block;\r\n  margin-top: 6px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}