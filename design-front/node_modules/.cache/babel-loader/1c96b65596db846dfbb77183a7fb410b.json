{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport $ from 'jquery';\nexport default {\n  name: 'ServiceUpload',\n  data() {\n    return {\n      uploadImages: []\n    };\n  },\n  computed: {\n    fileName: {\n      // 计算属性，自动拼凑出文件名称\n      get: function () {\n        let filename = '';\n        this.uploadImages.forEach(item => {\n          filename += item.name + ';';\n        });\n        return filename;\n      }\n    },\n    totalImgSize: {\n      // 计算属性，文件大小\n      get: function () {\n        let total = 0;\n        this.uploadImages.forEach(item => {\n          total += item.size;\n        });\n        return total;\n      }\n    }\n  },\n  methods: {\n    // todo 不能随便使用匿名函数的形式，因为可能会无法访问vue变量，因此\n    openWindow: function () {\n      document.getElementById('importFile').click();\n    },\n    check_suffix: function (filename) {\n      // 检查文件类型\n      const fileType = filename.substring(filename.lastIndexOf('.') + 1);\n      if (['png', 'jpg', 'jpeg', 'bmp', 'gif', 'webp', 'psd', 'svg', 'tiff'].indexOf(fileType.toLowerCase()) !== -1) {\n        return 1;\n      } else if (['zip'].indexOf(fileType.toLowerCase()) !== -1) {\n        return 2;\n      } else {\n        return 0;\n      }\n    },\n    getBase64: function (file, isFinal) {\n      // 获取文件字符串并获取文件对象\n      const fileReader = new FileReader();\n      const _this = this;\n      // todo 对象的构建 https://blog.csdn.net/LinDadaxia/article/details/107388546\n      const imgs = {};\n      imgs.name = file.name;\n      imgs.size = file.size;\n      imgs.type = file.type;\n      fileReader.readAsDataURL(file);\n      fileReader.onload = function (event) {\n        imgs.base64 = event.target.result;\n        _this.uploadImages.push(imgs);\n        if (isFinal) {\n          // todo js字符串格式化输出 https://blog.csdn.net/abraham_ly/article/details/111150401?ops_request_misc=&request_id=&biz_id=102&utm_term=js%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-111150401.nonecase&spm=1018.2226.3001.4187\n          // todo 格式化输出数字 https://blog.csdn.net/weixin_30258621/article/details/112933672?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166744417916782390552245%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=166744417916782390552245&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-112933672-null-null.142^v62^pc_search_tree,201^v3^control_2,213^v1^control&utm_term=js%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97&spm=1018.2226.3001.4187\n          _this.$message.success(`成功上传${_this.uploadImages.length}张图片。\\n总大小为: ${Number(_this.totalImgSize / 1024.0).toFixed(2)}kb;\\n选中的文件为${_this.fileName}`);\n        }\n      };\n    },\n    uploadFile: function (event) {\n      const _this = this;\n      // todo 学习 element-ui中确认消息框的使用， jquery需要引入脚本jq-confirm.js\n      this.$confirm('确认上传检测吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        _this.$message.success('正在上传');\n        // todo 待更新\n        const url = '';\n        $.ajax({\n          type: 'post',\n          url: url,\n          dataType: 'json',\n          data: {},\n          success: function (response) {\n            console.log(response);\n          }\n        });\n      }).catch(() => {\n        _this.$message({\n          type: 'info',\n          message: '已经取消上传'\n        });\n      });\n    }\n  },\n  mounted() {\n    const _this = this;\n    // 当上传文件时触发的内容\n    const fn = function (event) {\n      const files = event.target.files;\n      _this.uploadImages = [];\n      let i = 0;\n      // 对所有的文件开始读取\n      for (; i < files.length; i++) {\n        // 读取文件\n        if (_this.check_suffix(files[i].name) !== 0) {\n          // todo 文件需要先加载，加载完成之后才能触发事件，这是一个异步函数 https://blog.csdn.net/lyx32609/article/details/112601241\n          _this.getBase64(files[i], i === files.length - 1);\n        } else {\n          _this.$message.warning('仅支持图片或者.zip结尾的压缩文件夹');\n          break;\n        }\n      }\n      if (i === files.length && files.length === 1 && _this.check_suffix(files[0]) === 1) {\n        _this.$message.success('选中一张图片' + _this.fileName);\n      } else if (i === files.length) {\n        _this.$message.success('选中多个文件，进入批处理状态' + _this.fileName);\n      }\n    };\n    $('#importFile').change(fn);\n  }\n};","map":{"version":3,"mappings":";AAuBA;AAEA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MAAA;MACAC;QACA;QACA;UACAC;QACA;QACA;MACA;IACA;IACAC;MAAA;MACAF;QACA;QACA;UACAG;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACAC;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;MACAC;MACAA;MACAA;MACAC;MACAA;QACAD;QACAE;QACA;UACA;UACA;UACAA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;QACAC;QACAC;QACAC;MACA;QACAJ;QACA;QACA;QACAK;UACAD;UACAE;UACAC;UACAtB;UACAuB;YACAC;UACA;QACA;MACA;QACAT;UACAI;UACAM;QACA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;MACA;MACAX;MACA;MACA;MACA;QAAA;QACA;UACA;UACAA;QACA;UACAA;UACA;QACA;MACA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACAK;EACA;AACA","names":["name","data","uploadImages","computed","fileName","get","filename","totalImgSize","total","methods","openWindow","document","check_suffix","getBase64","imgs","fileReader","_this","uploadFile","confirmButtonText","cancelButtonText","type","$","url","dataType","success","console","message","mounted"],"sourceRoot":"src/components","sources":["ServiceUpload.vue"],"sourcesContent":["<template>\r\n  <div class=\"service-upload\">\r\n<!--输入框1-->\r\n    <div class=\"inb upload-input\">\r\n      <div class=\"inb input-box\">\r\n        <input id=\"filePath\" :value=\"fileName\" placeholder=\"请输入文件路径\"/>\r\n      </div>\r\n      <div class=\"inb input-btn\" @click=\"openWindow\">\r\n        <span style=\"display: inline-block;\">本地上传</span>\r\n      </div>\r\n    </div>\r\n<!--上传按钮2-->\r\n    <div class=\"inb upload-btn\">\r\n      <div class=\"detect-btn\" @click=\"uploadFile\">\r\n        <span>检测</span>\r\n      </div>\r\n    </div>\r\n    <span class=\"upload-info\">上传文件，仅支持图片类型或者压缩文件(.zip)</span>\r\n    <input type=\"file\" id=\"importFile\" v-show=\"false\" multiple>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n  name: 'ServiceUpload',\r\n  data () {\r\n    return {\r\n      uploadImages: []\r\n    }\r\n  },\r\n  computed: {\r\n    fileName: { // 计算属性，自动拼凑出文件名称\r\n      get: function () {\r\n        let filename = ''\r\n        this.uploadImages.forEach((item) => {\r\n          filename += item.name + ';'\r\n        })\r\n        return filename\r\n      }\r\n    },\r\n    totalImgSize: { // 计算属性，文件大小\r\n      get: function () {\r\n        let total = 0\r\n        this.uploadImages.forEach((item) => {\r\n          total += item.size\r\n        })\r\n        return total\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // todo 不能随便使用匿名函数的形式，因为可能会无法访问vue变量，因此\r\n    openWindow: function () {\r\n      document.getElementById('importFile').click()\r\n    },\r\n    check_suffix: function (filename) { // 检查文件类型\r\n      const fileType = filename.substring(filename.lastIndexOf('.') + 1)\r\n      if (['png', 'jpg', 'jpeg', 'bmp', 'gif', 'webp', 'psd', 'svg', 'tiff'].indexOf(fileType.toLowerCase()) !== -1) {\r\n        return 1\r\n      } else if (['zip'].indexOf(fileType.toLowerCase()) !== -1) {\r\n        return 2\r\n      } else {\r\n        return 0\r\n      }\r\n    },\r\n    getBase64: function (file, isFinal) { // 获取文件字符串并获取文件对象\r\n      const fileReader = new FileReader()\r\n      const _this = this\r\n      // todo 对象的构建 https://blog.csdn.net/LinDadaxia/article/details/107388546\r\n      const imgs = {}\r\n      imgs.name = file.name\r\n      imgs.size = file.size\r\n      imgs.type = file.type\r\n      fileReader.readAsDataURL(file)\r\n      fileReader.onload = function (event) {\r\n        imgs.base64 = event.target.result\r\n        _this.uploadImages.push(imgs)\r\n        if (isFinal) {\r\n          // todo js字符串格式化输出 https://blog.csdn.net/abraham_ly/article/details/111150401?ops_request_misc=&request_id=&biz_id=102&utm_term=js%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-111150401.nonecase&spm=1018.2226.3001.4187\r\n          // todo 格式化输出数字 https://blog.csdn.net/weixin_30258621/article/details/112933672?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166744417916782390552245%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=166744417916782390552245&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-112933672-null-null.142^v62^pc_search_tree,201^v3^control_2,213^v1^control&utm_term=js%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97&spm=1018.2226.3001.4187\r\n          _this.$message.success(`成功上传${_this.uploadImages.length}张图片。\\n总大小为: ${Number(_this.totalImgSize / 1024.0).toFixed(2)}kb;\\n选中的文件为${_this.fileName}`)\r\n        }\r\n      }\r\n    },\r\n    uploadFile: function (event) {\r\n      const _this = this\r\n      // todo 学习 element-ui中确认消息框的使用， jquery需要引入脚本jq-confirm.js\r\n      this.$confirm('确认上传检测吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        _this.$message.success('正在上传')\r\n        // todo 待更新\r\n        const url = ''\r\n        $.ajax({\r\n          type: 'post',\r\n          url: url,\r\n          dataType: 'json',\r\n          data: {},\r\n          success: function (response) {\r\n            console.log(response)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        _this.$message({\r\n          type: 'info',\r\n          message: '已经取消上传'\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    const _this = this\r\n    // 当上传文件时触发的内容\r\n    const fn = function (event) {\r\n      const files = event.target.files\r\n      _this.uploadImages = []\r\n      let i = 0\r\n      // 对所有的文件开始读取\r\n      for (; i < files.length; i++) { // 读取文件\r\n        if (_this.check_suffix(files[i].name) !== 0) {\r\n          // todo 文件需要先加载，加载完成之后才能触发事件，这是一个异步函数 https://blog.csdn.net/lyx32609/article/details/112601241\r\n          _this.getBase64(files[i], i === files.length - 1)\r\n        } else {\r\n          _this.$message.warning('仅支持图片或者.zip结尾的压缩文件夹')\r\n          break\r\n        }\r\n      }\r\n      if (i === files.length && files.length === 1 && _this.check_suffix(files[0]) === 1) {\r\n        _this.$message.success('选中一张图片' + _this.fileName)\r\n      } else if (i === files.length) {\r\n        _this.$message.success('选中多个文件，进入批处理状态' + _this.fileName)\r\n      }\r\n    }\r\n    $('#importFile').change(fn)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.service-upload{\r\n  height: 40px;\r\n  padding: 3px 0;\r\n  text-align:left;\r\n  font-size: 16px;\r\n}\r\n.inb{\r\n  display: inline-block;\r\n}\r\n.upload-input{\r\n  width: 78%;\r\n  margin-right:2%;\r\n  padding-left: 20px;\r\n}\r\n.input-btn{\r\n  background-color: #007FF5;\r\n  height: 35px;\r\n  width: 20%;\r\n  float: right;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  border-bottom-right-radius: 17px;\r\n  border-top-right-radius: 17px;\r\n}\r\n/*输入框的外围*/\r\n.input-box{\r\n  border-bottom-left-radius:18px;\r\n  border-top-left-radius:18px;\r\n  border: 2px solid #A1AFD2;\r\n  height: 35px;\r\n  width:80%;\r\n  color: #43485C;\r\n  background-color: #fff;\r\n}\r\n/*实际的输入框*/\r\n.input-box input{\r\n  width:90%;\r\n  margin-top:4px;\r\n  margin-left: 20px;\r\n  border-style: none;\r\n}\r\n\r\n/*文字框，控制文字的位置*/\r\n.input-btn span{\r\n  display: block;\r\n  margin-top: 6px;\r\n  margin-left: 20%;\r\n}\r\n.input-btn span:hover{\r\n  cursor: pointer;\r\n}\r\n.upload-btn{\r\n   width: 18%;\r\n  margin-top: -20px;\r\n}\r\n.detect-btn{\r\n  width: 130px;\r\n  height: 35px;\r\n  text-align: center;\r\n  background-color: #007FF5;\r\n  color: #fff;\r\n  border-radius: 17px;\r\n  font-weight: bold;\r\n  margin-left: 40px;\r\n}\r\n.detect-btn:hover{\r\n  cursor: pointer;\r\n}\r\n.detect-btn span{\r\n  display: inline-block;\r\n  margin-top: 6px;\r\n}\r\n.upload-info{\r\n  color: #B9BBC3;\r\n  font-size: 12px;\r\n  display: block;\r\n  margin-left: 40px;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}