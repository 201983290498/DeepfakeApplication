{"ast":null,"code":"import ServiceDisplay from '../components/ServiceDisplay';\nimport ServiceModule from '../components/ServiceModule';\nimport ServiceUpload from '../components/ServiceUpload';\nimport ServiceTitle from '../components/ServiceTitle';\nimport $ from \"jquery\";\nexport default {\n  name: 'DeepFakeDetector',\n  components: {\n    ServiceDisplay,\n    ServiceModule,\n    ServiceTitle,\n    ServiceUpload\n  },\n  data() {\n    return {\n      title: 'DeepFake篡改检测',\n      deepfakeDetector: window.server.DEEPFAKE,\n      disImgs: [require('../../static/imgs/fake1.jpg'), require('../../static/imgs/fake2.jpg'), require('../../static/imgs/real1.jpg')]\n    };\n  },\n  methods: {\n    uploadFile: function (imgs) {\n      // 上传文件返回结果\n      const _this = this;\n      // todo 学习 element-ui中确认消息框的使用， jquery需要引入脚本jq-confirm.js\n      this.$confirm('确认上传检测吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        _this.$message.info('正在上传');\n        $.ajax({\n          type: 'post',\n          url: _this.deepfakeDetector.detectUrl,\n          dataType: 'json',\n          contentType: 'application/json',\n          data: JSON.stringify(imgs),\n          success: function (response) {\n            if (response.result) {\n              // todo 待更新 检测更新结果\n              console.log(response);\n            } else {\n              // 显示错误信息\n              _this.$message.warning(response.msg);\n            }\n          },\n          xhr: function () {\n            const xhr = new window.XMLHttpRequest();\n            // todo 学习 使用XMLHttpRequest.upload监听上传过程，注册progress事件，打印回调函数中的event事件\n            xhr.upload.addEventListener('progress', function (event) {\n              // todo 待更新 需要查看更新的内容\n              if (event.lengthComputable) {\n                const percentComplete = event.loaded / event.total;\n                _this.uploaded = parseInt(String(percentComplete * 100));\n              }\n            }, false);\n            return xhr;\n          }\n        });\n      }).catch(() => {\n        _this.$message.info('已经取消上传');\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACA;MACA;QACAC;QACAC;QACAC;MACA;QACAC;QACAC;UACAF;UACAG;UACAC;UACAC;UACAb;UACAc;YACA;cACA;cACAC;YACA;cACA;cACAN;YACA;UACA;UACAO;YACA;YACA;YACAA;cACA;cACA;gBACA;gBACAP;cACA;YACA;YACA;UACA;QACA;MACA;QACAA;MACA;IACA;EACA;AACA","names":["name","components","ServiceDisplay","ServiceModule","ServiceTitle","ServiceUpload","data","title","deepfakeDetector","disImgs","methods","uploadFile","confirmButtonText","cancelButtonText","type","_this","$","url","dataType","contentType","success","console","xhr"],"sourceRoot":"src/views","sources":["DeepFakeDetector.vue"],"sourcesContent":["<template>\n  <div class=\"df-detector\">\n    <ServiceTitle :titleHeader=\"title\"></ServiceTitle>\n    <ServiceModule></ServiceModule>\n    <ServiceDisplay :disImgs='disImgs'></ServiceDisplay>\n    <ServiceUpload @upload='uploadFile'></ServiceUpload>\n  </div>\n</template>\n<!--components为啥要用大括号呢-->\n\n<script>\nimport ServiceDisplay from '../components/ServiceDisplay'\nimport ServiceModule from '../components/ServiceModule'\nimport ServiceUpload from '../components/ServiceUpload'\nimport ServiceTitle from '../components/ServiceTitle'\nimport $ from \"jquery\";\n\nexport default {\n  name: 'DeepFakeDetector',\n  components: {\n    ServiceDisplay,\n    ServiceModule,\n    ServiceTitle,\n    ServiceUpload\n  },\n  data () {\n    return {\n      title: 'DeepFake篡改检测',\n      deepfakeDetector: window.server.DEEPFAKE,\n      disImgs: [require('../../static/imgs/fake1.jpg'), require('../../static/imgs/fake2.jpg'), require('../../static/imgs/real1.jpg')]\n    }\n  },\n  methods: {\n    uploadFile: function (imgs) { // 上传文件返回结果\n      const _this = this\n      // todo 学习 element-ui中确认消息框的使用， jquery需要引入脚本jq-confirm.js\n      this.$confirm('确认上传检测吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        _this.$message.info('正在上传')\n        $.ajax({\n          type: 'post',\n          url: _this.deepfakeDetector.detectUrl,\n          dataType: 'json',\n          contentType: 'application/json',\n          data: JSON.stringify(imgs),\n          success: function (response) {\n            if (response.result) {\n              // todo 待更新 检测更新结果\n              console.log(response)\n            } else {\n              // 显示错误信息\n              _this.$message.warning(response.msg)\n            }\n          },\n          xhr: function () {\n            const xhr = new window.XMLHttpRequest()\n            // todo 学习 使用XMLHttpRequest.upload监听上传过程，注册progress事件，打印回调函数中的event事件\n            xhr.upload.addEventListener('progress', function (event) {\n              // todo 待更新 需要查看更新的内容\n              if (event.lengthComputable) {\n                const percentComplete = event.loaded / event.total\n                _this.uploaded = parseInt(String(percentComplete * 100))\n              }\n            }, false)\n            return xhr\n          }\n        })\n      }).catch(() => {\n        _this.$message.info('已经取消上传')\n      })\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}