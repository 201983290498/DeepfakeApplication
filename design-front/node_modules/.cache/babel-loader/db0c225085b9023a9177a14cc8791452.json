{"ast":null,"code":"import ServiceDisplay from '../components/ServiceDisplay';\nimport ServiceModule from '../components/ServiceModule';\nimport ServiceUpload from '../components/ServiceUpload';\nimport ServiceTitle from '../components/ServiceTitle';\nimport $ from 'jquery';\nexport default {\n  name: 'DeepFakeDetector',\n  components: {\n    ServiceDisplay,\n    ServiceModule,\n    ServiceTitle,\n    ServiceUpload\n  },\n  data() {\n    return {\n      title: 'DeepFake篡改检测',\n      deepfakeDetector: window.server.DEEPFAKE,\n      disImgs: [require('../../static/imgs/fake1.jpg'), require('../../static/imgs/fake2.jpg'), require('../../static/imgs/real1.jpg')]\n    };\n  },\n  methods: {\n    uploadFile: function (imgs) {\n      // 上传文件返回结果\n      const _this = this;\n      // todo 待学习, 学习Image的使用 https://www.cnblogs.com/tianma3798/p/13508786.html\n      const image = new Image();\n      image.src = imgs.base64;\n      image.crossOrigin = '';\n      image.onload = () => console.log('图片加载成功');\n      // todo 学习 element-ui中确认消息框的使用， jquery需要引入脚本jq-confirm.js\n      $.ajax({\n        type: 'post',\n        url: _this.deepfakeDetector.detectUrl,\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify(imgs),\n        success: function (response) {\n          if (response.result) {\n            // 通过base64字符串加载图片\n            imgs.base64 = _this.drawDetections(image, response.data.rects);\n            // todo 待学习 父组件调用子组件的函数 https://www.cnblogs.com/effortandluck/p/16355992.html\n            _this.$refs.serviceDisplay.updateImage(imgs);\n          } else {\n            // 显示错误信息\n            _this.$message.warning(response.msg);\n          }\n        },\n        xhr: function () {\n          const xhr = new window.XMLHttpRequest();\n          // todo 学习 使用XMLHttpRequest.upload监听上传过程，注册progress事件，打印回调函数中的event事件\n          xhr.upload.addEventListener('progress', function (event) {\n            // todo 待更新 需要查看更新的内容\n            if (event.lengthComputable) {\n              const percentComplete = event.loaded / event.total;\n              _this.uploaded = parseInt(String(percentComplete * 100));\n            }\n          }, false);\n          return xhr;\n        }\n      });\n    },\n    drawDetections: function (img, detections) {\n      // 绘制矩形框\n      // todo 待学习 canvas https://www.w3school.com.cn/tags/html_ref_canvas.asp\n      const canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      ctx.strokeStyle = 'red'; // 边框颜色\n      ctx.lineWidth = 2; // 线条宽度\n      ctx.font = '14px Verdana';\n      detections.forEach(function (detection) {\n        // todo 待学习 图片画矩形框 https://www.w3school.com.cn/tags/canvas_strokerect.asp\n        ctx.strokeRect(detection.x1, detection.y1, detection.x2 - detection.x1, detection.y2 - detection.y1);\n        const txt = '[ ' + detection.type + ', ' + detection.confidence + ' ]';\n        ctx.strokeText(txt, detection.x1, detection.y2 + 18);\n      });\n      return canvas.toDataURL();\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACA;MACA;MACAC;MACAA;MACAA;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAX;QACAY;UACA;YACA;YACAC;YACA;YACAC;UACA;YACA;YACAA;UACA;QACA;QACAC;UACA;UACA;UACAA;YACA;YACA;cACA;cACAD;YACA;UACA;UACA;QACA;MACA;IACA;IACAE;MAAA;MACA;MACA;MACAC;MACAA;MACA;MACAC;MACAA;MACAA;MACAA;MACAC;QACA;QACAD;QACA;QACAA;MACA;MACA;IACA;EACA;AACA","names":["name","components","ServiceDisplay","ServiceModule","ServiceTitle","ServiceUpload","data","title","deepfakeDetector","disImgs","methods","uploadFile","image","$","type","url","dataType","contentType","success","imgs","_this","xhr","drawDetections","canvas","ctx","detections"],"sourceRoot":"src/views","sources":["DeepFakeDetector.vue"],"sourcesContent":["<template>\n  <div class=\"df-detector\">\n    <ServiceTitle :titleHeader=\"title\"></ServiceTitle>\n    <ServiceModule></ServiceModule>\n    <ServiceDisplay :disImgs='disImgs' @upload=\"uploadFile\" ref=\"serviceDisplay\"></ServiceDisplay>\n    <ServiceUpload @upload='uploadFile'></ServiceUpload>\n  </div>\n</template>\n<!--components为啥要用大括号呢-->\n\n<script>\nimport ServiceDisplay from '../components/ServiceDisplay'\nimport ServiceModule from '../components/ServiceModule'\nimport ServiceUpload from '../components/ServiceUpload'\nimport ServiceTitle from '../components/ServiceTitle'\nimport $ from 'jquery'\n\nexport default {\n  name: 'DeepFakeDetector',\n  components: {\n    ServiceDisplay,\n    ServiceModule,\n    ServiceTitle,\n    ServiceUpload\n  },\n  data () {\n    return {\n      title: 'DeepFake篡改检测',\n      deepfakeDetector: window.server.DEEPFAKE,\n      disImgs: [require('../../static/imgs/fake1.jpg'), require('../../static/imgs/fake2.jpg'), require('../../static/imgs/real1.jpg')]\n    }\n  },\n  methods: {\n    uploadFile: function (imgs) { // 上传文件返回结果\n      const _this = this\n      // todo 待学习, 学习Image的使用 https://www.cnblogs.com/tianma3798/p/13508786.html\n      const image = new Image()\n      image.src = imgs.base64\n      image.crossOrigin = ''\n      image.onload = () => console.log('图片加载成功')\n      // todo 学习 element-ui中确认消息框的使用， jquery需要引入脚本jq-confirm.js\n      $.ajax({\n        type: 'post',\n        url: _this.deepfakeDetector.detectUrl,\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify(imgs),\n        success: function (response) {\n          if (response.result) {\n            // 通过base64字符串加载图片\n            imgs.base64 = _this.drawDetections(image, response.data.rects)\n            // todo 待学习 父组件调用子组件的函数 https://www.cnblogs.com/effortandluck/p/16355992.html\n            _this.$refs.serviceDisplay.updateImage(imgs)\n          } else {\n            // 显示错误信息\n            _this.$message.warning(response.msg)\n          }\n        },\n        xhr: function () {\n          const xhr = new window.XMLHttpRequest()\n          // todo 学习 使用XMLHttpRequest.upload监听上传过程，注册progress事件，打印回调函数中的event事件\n          xhr.upload.addEventListener('progress', function (event) {\n            // todo 待更新 需要查看更新的内容\n            if (event.lengthComputable) {\n              const percentComplete = event.loaded / event.total\n              _this.uploaded = parseInt(String(percentComplete * 100))\n            }\n          }, false)\n          return xhr\n        }\n      })\n    },\n    drawDetections: function (img, detections) { // 绘制矩形框\n      // todo 待学习 canvas https://www.w3school.com.cn/tags/html_ref_canvas.asp\n      const canvas = document.createElement('canvas')\n      canvas.width = img.width\n      canvas.height = img.height\n      const ctx = canvas.getContext('2d')\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\n      ctx.strokeStyle = 'red' // 边框颜色\n      ctx.lineWidth = 2 // 线条宽度\n      ctx.font = '14px Verdana'\n      detections.forEach(function (detection) {\n        // todo 待学习 图片画矩形框 https://www.w3school.com.cn/tags/canvas_strokerect.asp\n        ctx.strokeRect(detection.x1, detection.y1, detection.x2 - detection.x1, detection.y2 - detection.y1)\n        const txt = '[ ' + detection.type + ', ' + detection.confidence + ' ]'\n        ctx.strokeText(txt, detection.x1, detection.y2 + 18)\n      })\n      return canvas.toDataURL()\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}